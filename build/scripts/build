#!/usr/bin/env bash
PROJECT=go-tutorial
DOCKERIMG=thednp/go-tutorial
DOCKERIMGDEPR=thednp/gotutorial
TUTORIALNB=notebooks/GolangTutorial.ipynb
GOPHERHOME=./$PROJECT.d
GOPHERWORKSPACE=$GOPHERHOME/.jupyter/lab/workspaces
BUILDWORKSPACE=build/config/home.jupyter.lab/workspaces
VERSION=$(date +v%y.%j.%H%M)

build () { 
  [[ "$1" =~ ^all|deprecated$ ]] && {
    docker build -f build/Dockerfile.obsolete -t $DOCKERIMGDEPR:latest .
    [ -n "$KEEPLOG" ] && echo $DOCKERIMGDEPR:latest >> $KEEPLOG
  }
  ! [[ "$1" =~ ^deprecated$   ]] && {
    echo $VERSION > VERSION
    docker build -f build/Dockerfile -t $DOCKERIMG:$VERSION   -t $DOCKERIMG:latest .
    rm VERSION
    [ -z "$KEEPLOG" ] || {
      echo $DOCKERIMG:$VERSION >> $KEEPLOG
      echo $DOCKERIMG:latest   >> $KEEPLOG
    }
  }
}

storeNotebook () {
  command -v jq >&/dev/null \
    && [ -e $GOPHERHOME/$TUTORIALNB ] \
      && cat $GOPHERHOME/$TUTORIALNB \
         | jq '.cells[] |= del(.outputs,.execution_count)' | tee $TUTORIALNB
}

storeWorkspaceSettings () {
  ls -1t $GOPHERWORKSPACE/default* | tail -1 \
      | xargs cat | tee $BUILDWORKSPACE/default*
}

store () {
  storeNotebook
  storeWorkspaceSettings
}

[ -n "$1" ] && ! [[ "$1" =~ ^all|deprecated$ ]] && echo "\
Usage: $0 [all|deprecated]

  all           build also deprecated image
  deprecated    build deprecated image only
" && exit 1

store
build "$@"
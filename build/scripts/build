#!/usr/bin/env bash
PROJECT=go-tutorial
DOCKERIMG=docker.io/thednp/go-tutorial
DOCKERIMGDEPR=docker.io/thednp/gotutorial
DOCKERCACHE=$DOCKERIMG-cache
DOCKERBUILDER=$PROJECT
TUTORIALNB=notebooks/GolangTutorial.ipynb
GOPHERHOME=./$PROJECT.d
GOPHERWORKSPACE=$GOPHERHOME/.jupyter/lab/workspaces
BUILDWORKSPACE=build/config/home.jupyter.lab/workspaces
VERSION=$(date +v%y.%j.%H%M)

docker-buildx-create () {
  docker buildx ls | grep ^. | grep ^$DOCKERBUILDER >&/dev/null \
    || docker buildx create --name $DOCKERBUILDER --use --driver=docker-container
}

docker-buildx-build () {
  docker buildx build \
    --cache-from "type=registry,ref=$DOCKERCACHE" \
    $([ "$2" == "write-cache" ] && echo --cache-to "type=registry,ref=$DOCKERCACHE") \
    --output "type=image,name=$DOCKERIMG:$1,push=true" \
    -f build/Dockerfile .
}

build () { 
  [[ "$1" =~ ^all|deprecated$ ]] && {
    docker build -f build/Dockerfile.obsolete -t $DOCKERIMGDEPR:latest .
    docker push $DOCKERIMGDEPR:latest
  }
  ! [[ "$1" =~ ^deprecated$ ]] && {
    echo $VERSION > VERSION
    if [ "$2" == "buildx" ] ; then
      docker-buildx-create
      docker-buildx-build latest write-cache
      [[ "$1" =~ ^all|with-version$ ]] && docker-buildx-build $VERSION
    else
      docker build -f build/Dockerfile  -t $DOCKERIMG:latest \
        $([[ "$1" =~ "^all|with-version$" ]] && echo -t $DOCKERIMG:$VERSION || echo -n "") .
    fi
    rm VERSION
  }
}

storeNotebook () {
  command -v jq >&/dev/null \
    && [ -e $GOPHERHOME/$TUTORIALNB ] \
      && cat $GOPHERHOME/$TUTORIALNB \
         | jq '.cells[] |= del(.outputs,.execution_count)' | tee $TUTORIALNB >&/dev/null
}

storeWorkspaceSettings () {
  ls -1t $GOPHERWORKSPACE/default* >&/dev/null | tail -1 \
      | xargs cat | tee $BUILDWORKSPACE/default* >&/dev/null
}

store () {
  storeNotebook
  storeWorkspaceSettings
}

[ -n "$1" ] \
  && ! { [[ "$1" =~ ^deprecated$       ]] && [ -z "$2" ] ; } \
  && ! { [[ "$1" =~ ^all|with-version$ ]] && [[ "$2" =~ ^buildx$ ]] ; } \
  && echo "\
Usage: $0 [all|deprecated|with-version] [buildx]

  all          [buildx]  build and push also deprecated image
  with-version [buildx]  build and push main image also with version tag
  deprecated             build and push deprecated image only
  buildx                 use registry cache
" && exit 1

store
build "$@"
